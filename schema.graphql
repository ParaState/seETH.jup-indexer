# To improve query performance, we strongly suggest adding indexes to any field that you plan to filter or sort by
# Add the `@index` or `@index(unique: true)` annotation after any non-key field
# https://academy.subquery.network/build/graphql.html#indexing-by-non-primary-key-field

# ERC4626 Events
type Deposit @entity {
  id: ID! # Transaction hash
  blockHeight: BigInt
  owner: String! @index
  assets: BigInt!
  shares: BigInt!
  timestamp: Date
}

type Withdraw @entity {
  id: ID! # Transaction hash
  blockHeight: BigInt
  sender: String! @index
  receiver: String! @index
  owner: String! @index
  assets: BigInt!
  shares: BigInt!
  timestamp: Date
}

# SeETH Redeem Request - Unified entity for tracking redeem request lifecycle
type RedeemRequest @entity {
  id: ID! # requestId
  blockHeight: BigInt
  owner: String! @index
  shares: BigInt!
  requestTime: BigInt! # block.timestamp when request was created
  status: String! @index # current status: pending, approved, executed, cancelled
  assetsPaid: BigInt # amount of assets paid when executed (null if not executed)
  createdAt: Date # timestamp when request was created
  updatedAt: Date # timestamp when request was last updated
  # State transition timestamps
  requestedAt: Date # when request was created
  approvedAt: Date # when request was approved (null if not approved)
  executedAt: Date # when request was executed (null if not executed)
  cancelledAt: Date # when request was cancelled (null if not cancelled)
  # Event tracking
  requestedTxHash: String # transaction hash for RedeemRequested event
  cancelledTxHash: String # transaction hash for RedeemCancelled event (null if not cancelled)
  approvedTxHash: String # transaction hash for RedeemApproved event (null if not approved)
  executedTxHash: String # transaction hash for RedeemExecuted event (null if not executed)
}
