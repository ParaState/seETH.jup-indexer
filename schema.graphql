# To improve query performance, we strongly suggest adding indexes to any field that you plan to filter or sort by
# Add the `@index` or `@index(unique: true)` annotation after any non-key field
# https://academy.subquery.network/build/graphql.html#indexing-by-non-primary-key-field

type Transfer @entity {
  id: ID! # Transaction hash
  blockHeight: BigInt
  to: String!
  from: String!
  value: BigInt!
  contractAddress: String!
}

type Approval @entity {
  id: ID! # Transaction hash
  blockHeight: BigInt
  owner: String!
  spender: String!
  value: BigInt!
  contractAddress: String!
}

type StakedRecord @entity {
  id: ID! # Transaction hash
  pool: String
  blockHeight: BigInt
  staker: String
  stakeToken: String
  stakeAmount: BigInt
  mintReceiver: String
  mintToken: String
  mintAmount: BigInt
  timestamp: Date
}

type Staker @entity {
  id: ID! @dbType(type: "String") # kecash256( pool, staker)
  pool: String # stake pool address
  staker: String # staker address
  stakeAmount: BigInt # total staked amount
  mintAmount: BigInt # total minted amount
}

type UnstakeAccepted @entity {
  id: ID! # Transaction hash
  acceptId: BigInt # accept id
  pool: String
  blockHeight: BigInt
  staker: String
  unstakeToken: String
  unstakeAmount: BigInt
  redeemEarning: BigInt
  redeemEth: BigInt
  redeemUsdc: BigInt
  status: String # "pending", "success", "failed"
  timestamp: Date
}
